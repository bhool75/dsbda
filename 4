# for boston

# 1. Load the Boston Housing Dataset
from sklearn.datasets import load_boston
boston = load_boston()
X, y = boston.data, boston.target

# 2. Prepare the data
# No need to preprocess the data as it's already preprocessed in the dataset

# 3. Split the data into training and testing sets
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# 4. Create and train a linear regression model
from sklearn.linear_model import LinearRegression
model = LinearRegression()
model.fit(X_train, y_train)

# 5. Evaluate the model's performance
train_score = model.score(X_train, y_train)
test_score = model.score(X_test, y_test)
print(f"Training R^2 score: {train_score}")
print(f"Testing R^2 score: {test_score}")

# 6. Predict home prices
y_pred = model.predict(X_test)


# for salary

import pandas as pd

# Load the salary dataset
salary_data = {
    'Experience': [5, 7, 9, 12, 18, 20],
    'Salary': [20000, 25000, 40000, 60000, 80000, 110000]
}
df = pd.DataFrame(salary_data)

# Prepare the data
X = df[['Experience']]
y = df['Salary']

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create and train a linear regression model
model = LinearRegression()
model.fit(X_train, y_train)

# Evaluate the model's performance
train_score = model.score(X_train, y_train)
test_score = model.score(X_test, y_test)
print(f"Training R^2 score: {train_score}")
print(f"Testing R^2 score: {test_score}")

# Predict salary for 15 years of experience
predicted_salary = model.predict([[15]])
print(f"Predicted salary for 15 years of experience: {predicted_salary[0]}")
